---
   - name: Including configuration vars
     include_vars:
       file: ./variables.yml

   - name: Check if node is running
     shell: curl http://localhost:10248/healthz 2>/dev/null
     register: is_running
     ignore_errors: True

   - name: Setting hostname
     shell: hostnamectl set-hostname {{ inventory_hostname }}
     when: is_running.stdout != "ok"

   - name: Creating hosts file with kubernetes hosts
     template:
       src: k8s_hosts.j2
       dest: kubernetes-hosts

   - name: Updating /etc/hosts
     shell: grep -F -x -v -f /etc/hosts kubernetes-hosts >> /etc/hosts | { grep e || true; }

#   - name: Example using fail and when together
#     fail:
#       msg: The system may not be provisioned according to the CMDB status.

   - name: Installing kernel modules
     shell:
       cmd: |
         cat << EOF | tee /etc/modules-load.d/containerd.conf 
         overlay 
         br_netfilter 
         EOF
     when: is_running.stdout != "ok"

   - name: Setting up modules
     shell: modprobe overlay && modprobe br_netfilter
     when: is_running.stdout != "ok"

   - name: Updating sysctl settings
     shell:
       cmd: |
         cat <<EOF | tee /etc/sysctl.d/99-kubernetes-cri.conf
         net.bridge.bridge-nf-call-iptables = 1
         net.ipv4.ip_forward = 1
         net.bridge.bridge-nf-call-ip6tables = 1
         EOF
     when: is_running.stdout != "ok"

   - name: Disabling SWAP
     shell: swapoff -a
     when: is_running.stdout != "ok"

   - name: Restarting sysctl
     shell: sysctl --system
     when: is_running.stdout != "ok"

   - name: Installing packages
     apt:
       pkg:
         - containerd
         - ca-certificates
         - containernetworking-plugins
         - runc
         - apt-transport-https
         - curl
       state: present
       update_cache: yes
       force_apt_get: yes
     when: is_running.stdout != "ok"

   - name: Creating folder for containerd
     file:
       state: directory
       path: /etc/containerd
     when: is_running.stdout != "ok"

   - name: Configuring containerd
     shell:
       cmd: |
         containerd config default | tee /etc/containerd/config.toml 
         sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml
     when: is_running.stdout != "ok"

   - name: Restarting containerd
     shell: systemctl restart containerd
     when: is_running.stdout != "ok"

   - name: Adding gpg key for k8s repo
     shell: curl -fsSL https://pkgs.k8s.io/core:/stable:/v{{ kubernetes_version }}/deb/Release.key | gpg --batch --yes --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
     when: is_running.stdout != "ok"

   - name: Setting up k8s repo
     shell:
       cmd: |
         cat << EOF | sudo tee /etc/apt/sources.list.d/kubernetes.list
         deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v{{ kubernetes_version }}/deb/ /
         EOF
     when: is_running.stdout != "ok"

   - name: Installing kubernetes
     apt:
       pkg:
         - kubeadm
         - kubectl
       state: present
       update_cache: yes
       force_apt_get: yes
     when: is_running.stdout != "ok"

   - name: Mark kubernetes
     shell: apt-mark hold kubelet kubeadm kubectl
     when: is_running.stdout != "ok"
